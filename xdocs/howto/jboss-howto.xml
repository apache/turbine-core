<?xml version="1.0"?>
<!-- 
/*
 * Copyright 2001-2006 The Apache Software Foundation.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 -->

<document>

 <properties>
   <title>JBoss Howto</title>
 </properties>

 <body>

 <section name="3 Steps to get the Catalina included with TDK to work with JBoss2.2.1">
 <p>
 Comment 2006-06-20: This is so unbelievably old (we no longer produce the TDK
 and JBoss is now at version 4.0.x).
 </p>

 <p>
 By: <a href="mailto:john NOSPAM murphyfutures.com">John Menke</a><br/>
 </p>

 <p>
    <ol>
    <li>Edit the startup.sh: 
    <p>
    $BASEDIR/catalina.sh run -nonaming "$@"  (-nonaming does not work with start)
    </p>
    </li>
    <li>
    Move all the files from JBOSS_HOME/client directory to the /WEB-INF/lib
    directory.
    </li>
    <li>
    Delete the jndi.jar file (and the jndi-1.2.1.jar) from the /WEB-INF/lib
    directory.
    </li>
    </ol>
  </p>
  <p>
  I probably have extra jars in the WEB-INF/lib at the moment, but IT WORKS!
  </p>
  
<source>
WEB-INF/lib
	TestBeanClient.jar
	activation-1.01.jar
	connector.jar
	deploy.jar
	ecs-1.4.1.jar
	ejb.jar
	hsql.jar
	jaas.jar
	jakarta-regexp-1.3-dev.jar
	jboss-client.jar
	jbossmq-client.jar
	jbosssx-client.jar
	jdbc-se2.0.jar
	jdbc2_0-stdext.jar
	jnp-client.jar
	jta-spec1_0_1.jar
	jta1.0.1.jar
	junit-3.2.jar
	log4j-1.0.4.jar
	mail-1.2.jar
	mm.mysql-2.0.4.jar
	postgresql.jar
	stop.jar
	turbine-2.1-dev-unrealeased.jar
	velocity-1.0b2-dev.jar
	village-1.5.1-dev.jar
	xalan-1.2.1.jar
	xerces-1.3.0.jar
	xmlrpc.jar
</source>

  <p>  
  THIS EXAMPLE JNDI CODE NOW RUNS: (servlet from within TDK)
  </p>
  
<source><![CDATA[
try
{
    // Set up the naming provider. This may not always be necessary,
    // depending on how your Java system is configured.
    System.setProperty("java.naming.factory.initial",
      "org.jnp.interfaces.NamingContextFactory");
    System.setProperty("java.naming.provider.url",
      "localhost:1099");
    // Get a naming context
    InitialContext jndiContext = new InitialContext();

    // Get a reference to the Interest Bean
    Object ref = jndiContext.lookup("interest/Interest");

    // Get a reference from this to the Bean's Home interface
    InterestHome home = (InterestHome)
        PortableRemoteObject.narrow (ref, InterestHome.class);

    // Create an Interest object from the Home interface
    m_interest = home.create();
}
catch(Exception e)
{
    out.println("<LI>Context failed: " + e);
}  
]]></source>
</section>

 </body>
</document>
