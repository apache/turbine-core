<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================== -->
<!--                                                                          -->
<!--  maven Buildfile                                                         -->
<!--                                                                          -->
<!-- $Id$ -->
<!--                                                                          -->
<!-- ======================================================================== -->

<project
  xmlns:j="jelly:core"
  xmlns:m="maven"
  xmlns:u="jelly:util"
  xmlns:maven="jelly:maven"
  default="java:jar">

  <!-- ================================================================== -->
  <!-- C O M P I L E   P O S T - G O A L                                  -->
  <!-- ================================================================== -->
  <!-- executed before the building of the jar, it copies all the various -->
  <!-- resource files into the jar build directory                        -->
  <!-- ================================================================== -->

  <postGoal name="java:compile">
    <copy
      file="${maven.src.dir}/dtd/intake.dtd"
      todir="${maven.build.dest}/org/apache/turbine/services/intake/transform"
    />
  </postGoal>

  <!-- ================================================================== -->
  <!-- T O R Q U E  G E N E R A T I O N  P R E  G O A L                   --> 
  <!-- ================================================================== -->
  <!-- This preGoal is executed before the the compilation goal so that   -->
  <!-- the sources for the security service and the scheduler are         -->
  <!-- generated.                                                         -->
  <!-- ================================================================== -->

  <preGoal name="java:compile">
    <copy todir="target/src">
      <fileset dir="src/java"/>
    </copy>

    <attainGoal name="scheduler-om"/>
    <attainGoal name="torque-security-om"/>

    <!-- Hack for Maven bug when compiling with a clean target. -->
    <j:if test="${sourcesPresent != 'true'}">
      <j:set var="sourcesPresent" value="true"/>
      <path id="maven.compile.src.set" location="target/src"/>
    </j:if>

  </preGoal>

  <!-- ================================================== -->
  <!-- Create the SQL necessary for the Databases         -->
  <!-- ================================================== -->

  <preGoal name="torque:sql">
    <attainGoal name="copy-om"/>
  </preGoal>

  <!-- ================================================== -->
  <!-- Prepare the OM Sources for Torque                  -->
  <!-- ================================================== -->

  <goal name="copy-om">
    <attainGoal name="copy-scheduler-om"/>
    <attainGoal name="copy-torque-security-om"/>
  </goal>

  <goal name="copy-scheduler-om">
    <filter token="DATABASE_DEFAULT" value="${scheduler.database.name}"/>
    <filter token="EXTRA_USER_COLUMNS" value="${scheduler.extra.user.columns}"/>
    <copy
      file="src/schema/scheduler-schema.xml"
      tofile="${torque.schema.dir}/scheduler-schema.xml"
      filtering="yes"/>
  </goal>

  <goal name="copy-torque-security-om">
    <filter token="DATABASE_DEFAULT" value="${torque.security.database.name}"/>
    <copy
      file="src/schema/torque-security-schema.xml"
      tofile="${torque.schema.dir}/torque-security-schema.xml"
      filtering="yes"/>
  </goal>
  

  <!-- ================================================== -->
  <!-- Build Peers for the Scheduler                      -->
  <!-- ================================================== -->
  <goal name="scheduler-om">

    <attainGoal name="copy-scheduler-om"/>

    <j:set var="torque.project" value="scheduler"/>
    <j:set var="torque.schema.om.includes" value="scheduler-schema.xml"/>
    <j:set var="torque.targetPackage" value="${scheduler.package}"/>
    <attainGoal name="torque:om"/>

  </goal>

  <!-- ================================================== -->
  <!-- Build Peers for Torque Security                    -->
  <!-- ================================================== -->
  <goal name="torque-security-om">

    <attainGoal name="copy-torque-security-om"/>

    <j:set var="torque.project" value="torque-security"/>
    <j:set var="torque.schema.om.includes" value="torque-security-schema.xml"/>
    <j:set var="torque.targetPackage" value="${torque.security.package}"/>
    <attainGoal name="torque:om"/>

  </goal>

  <!-- ================================================== -->
  <!-- Perform the nightly build process                  -->
  <!-- ================================================== -->
  <goal name="nightly:build"
      description="Build distribution snapshots">

    <cvs command="-q update -Pd"/>
    <attainGoal name="clean"/>
    <maven:snapshot project="${pom}"/>

    <j:set var="maven.final.name" value="${snapshotSignature}-${pom.currentVersion}"/>
    <attainGoal name="dist:build"/>

  </goal>

  <!-- ================================================== -->
  <!-- Deploy the nightly builds                          -->
  <!-- ================================================== -->
  <goal name="nightly:deploy"
     prereqs="nightly:build"
     description="Deploy the nightly builds">

    <m:user-check user="${maven.username}"/>

    <echo>
       deploymentAddress = ${pom.siteAddress}
       deploymentDirectory = ${turbine.nightly.dist.dir}
    </echo>

    <j:set var="dist.dir" value="${maven.build.dir}/distributions" />

    <!-- Make sure the destination directory exists before trying to copy -->
    <exec dir="." executable="${maven.ssh.executable}">
       <arg line="${pom.siteAddress} -l ${maven.username} 'mkdir -p ${turbine.nightly.dist.dir}'"/>
    </exec>

    <fileScanner var="distFiles">
      <fileset dir="${dist.dir}">
      </fileset>
    </fileScanner>

    <j:forEach var="file" items="${distFiles.iterator()}">
      <echo>Processing ${file}</echo>

      <exec dir="${dist.dir}" executable="${maven.scp.executable}">
        <arg value="${file}"/>
        <arg value="${maven.username}@${pom.siteAddress}:${turbine.nightly.dist.dir}"/>
      </exec>
    </j:forEach>

  </goal>

</project>
