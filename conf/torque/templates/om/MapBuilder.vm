package ${package}.map;

import java.util.*;
import java.math.*;
import org.apache.turbine.services.db.PoolBrokerService;
import org.apache.turbine.services.db.TurbineDB;
import org.apache.turbine.util.db.map.MapBuilder;
import org.apache.turbine.util.db.map.DatabaseMap;
import org.apache.turbine.util.db.map.TableMap;

/**
#if ($addTimeStamp)
 *  This class was autogenerated by Torque on: 
 *
 * [$now]
 *
#end
 */
public class ${table.JavaName}MapBuilder implements MapBuilder
{
    /** the name of this class */
    public static final String CLASS_NAME = "${package}.map.${table.JavaName}MapBuilder";

    /** item */
    public static String getTable( )
    {
        return "$table.Name";
    }

#foreach ($col in $table.Columns)
    #set ( $tfc=$table.JavaName )
    #set ( $cfc=$col.JavaName )
    #set ( $cup=$col.Name.toUpperCase() )

    /** ${table.Name}.$cup */
    public static String get${tfc}_${cfc}()
    {
        return getTable() + ".$cup";
    }
#end

    /**  the database map  */
    private DatabaseMap dbMap = null;

    /**
        tells us if this DatabaseMapBuilder is built so that we don't have
        to re-build it every time
    */
    public boolean isBuilt()
    {
        if ( dbMap != null )
            return true;
        return false;
    }

    /**  gets the databasemap this map builder built.  */
    public DatabaseMap getDatabaseMap()
    {
        return this.dbMap;
    }
    /** the doBuild() method builds the DatabaseMap */
    public void doBuild() throws Exception
    {
        dbMap = TurbineDB.getDatabaseMap("$table.Database.Name");

        dbMap.addTable(getTable());
        TableMap tMap = dbMap.getTable(getTable());

        #if ($table.IdMethod == "native")
        tMap.setPrimaryKeyMethod(TableMap.NATIVE);
        #elseif ($table.IdMethod == "autoincrement")
        tMap.setPrimaryKeyMethod(TableMap.AUTO_INCREMENT);
        #elseif ($table.IdMethod == "sequence")
        tMap.setPrimaryKeyMethod(TableMap.SEQUENCE);
        #elseif ($table.IdMethod == "idbroker")
        tMap.setPrimaryKeyMethod(TableMap.ID_BROKER);
        #else
        tMap.setPrimaryKeyMethod("$table.IdMethod");
        #end

#if ($table.IdMethod == "idbroker")
        tMap.setPrimaryKeyMethodInfo(tMap.getName());
#elseif ($table.IdMethod == "sequence")
        tMap.setPrimaryKeyMethodInfo("$table.SequenceName");
#elseif ($table.IdMethodParameters)
        // this might need upgrading based on what all the databases
        // need, but for now assume one parameter.
    #set ($imp = $table.IdMethodParameters.get(0) )
        tMap.setPrimaryKeyMethodInfo("$imp.Value");
#end        

#foreach ($col in $table.Columns)
    #set ( $tfc=$table.JavaName )
    #set ( $cfc=$col.JavaName )
    #set ( $cup=$col.Name.toUpperCase() )

    #if($col.isPrimaryKey())
      #if($col.isForeignKey())
        tMap.addForeignPrimaryKey ( get${tfc}_${cfc}(), $col.JavaObject , "$col.RelatedTableName" , "$col.RelatedColumnName" );
      #else
        tMap.addPrimaryKey ( get${tfc}_${cfc}(), $col.JavaObject );
      #end
    #else
      #if($col.isForeignKey())
        tMap.addForeignKey ( get${tfc}_${cfc}(), $col.JavaObject , "$col.RelatedTableName" , "$col.RelatedColumnName" );
      #else
        tMap.addColumn ( get${tfc}_${cfc}(), $col.JavaObject );
      #end
    #end
#end

    }

}
