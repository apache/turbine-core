<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->

<document>
  <properties>
    <title>Flavors reference</title>
    <author email="hps@intermeta.de">Henning P. Schmiedehausen</author>
  </properties>
  <body>
<section name="Flavors">
    <p>
    There is more than just one version of Turbine. You might have to build one application using
    a released version of Turbine (currently 2.3.3) and the next should use a developer version or
    even a &quot;bleeding edge&quot; snapshot release of the Turbine code. Whatever you want to use,
    the M.E.T.A. plugin helps you selecting the right skeleton for your code.
    </p>

<subsection name="Selecting Flavors">
<p>
The default flavor for a new application in <a
href="using_meta.html#Ad_hoc_setup">ad hoc setup</a> mode is the
current stable Turbine release (&quot;turbine-2.3.3&quot;). If you want
to use a different flavor, you must either supply it on the command
line or in your setup.properties file.</p>

<source><![CDATA[
Generate a Turbine 2.3 skeleton:

maven -Dturbine.app.name=<application name> -Dturbine.app.flavor=turbine-2.3 turbine:setup
]]></source>

</subsection>

<subsection name="Adding your own flavors">
<p>
<font color="red">This is a section for advanced users that are
reasonably familiar with maven and the Turbine framework. If you're
just starting to use Turbine and M.E.T.A., you can skip this
section.</font></p>

<p>
Flavors are built from templates in the <code>flavor</code>
subdirectory of the M.E.T.A. plugin. If you want to add a new flavor, you
must modify the plugin source and then rebuild and deploy the plugin
to your maven installation.<br/>

The plugin source contains a subdirectory
<code>src/plugin-resources/flavor</code>. Here are the setup files for
each flavor stored, that are used by the <a
href="goals.html#turbine_setup">turbine:setup</a> goal. Each flavor
has its own subdirectory which can in turn contain the following
directories:

<table>
  <tr>
    <th>Path</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>maven</td>
    <td>Files for the application setup.</td>
  </tr>
  <tr>
    <td>conf</td>
    <td>Turbine configuration file.</td>
  </tr>
  <tr>
    <td>schema</td>
    <td>Schema files for Application and Security OM classes.</td>
  </tr>
  <tr>
    <td>templates</td>
    <td>Default templates for your application.</td>
  </tr>
  <tr>
    <td>images</td>
    <td>Images to be copied into your application.</td>
  </tr>
  <tr>
    <td>resources</td>
    <td>General resources needed for your application.</td>
  </tr>
  <tr>
    <td>pages</td>
    <td>Other files, e.g. HTML pages, that should be put into your application root.</td>
  </tr>
  <tr>
    <td>props</td>
    <td>Files that should go in the application classpath (the
        <code>WEB-INF/classes</code> directory). e.g. the
        <code>commons-logging.properties</code> that can be used with
        Turbine 2.3.1 and beyond.
    </td>
  </tr>
</table>

There is also a directory called  <code>common</code> which contains
files that are the same for all flavors.
</p>

<p>
<a href="goals.html#turbine_setup">turbine:setup</a> copies all the
files from the <code>common</code> directory into the new application
skeleton and then the files from the respective flavor
directory. Files from the latter will overwrite files from the
<code>common</code> tree.
</p>

<p>
Subdirectories can be omitted if there are no flavor specific files.
</p>

<p>
To add a new flavor, you must add at least a flavor specific <code>maven</code>
subdirectory as <code>flavor/&lt;your flavor name&gt;/maven</code>  which contains the
template for the maven POM (<code>project.xml</code>).
</p>

<p>
The tricky part of setting up a new flavor happens when you do
<b>not</b> need a file from the <code>common</code> directory for your
new flavor. In that case, you must copy this file from the <code>common</code>
sub-tree into all other flavors and then remove it from there.
</p>
</subsection>
</section>
</body>
</document>
