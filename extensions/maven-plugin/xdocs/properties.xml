<?xml version="1.0" encoding="UTF-8"?>

<document>
  <properties>
    <title>Properties</title>
    <author email="hps@intermeta.de">Henning P. Schmiedehausen</author>
  </properties>
  <body>
<section name="Setup Properties from the META plugin">
    <p>
META uses two sets of plugin properties to configure your Turbine
application. The first set is called the &quot;Setup Properties&quot;,
because they're only read by the turbine:setup goal which is run when
creating the skeleton of your application. These parameters are used
in various places and transformed into your turbine specific
configuration files. Once you've set up your application, these
parameter are no longer used. If you change these, you must rerun the
turbine:setup goal (which might result in losing other changes to your
configuration files, so be careful!).
</p>

  <p>
  <table>
    <tr>
      <th>Property</th>
      <th>Optional?</th>
      <th>Default value</th>
      <th>Description</th>
    </tr>

<tr>
<td>turbine.app.name</td>
<td>No</td>
<td><b>no default value</b></td>
<td>Name of the new application.<font color="red">Must be set for turbine:setup, else the task fails!</font></td>
</tr>

<tr>
<td>turbine.app.package</td>
<td>Yes</td>
<td>org.apache.turbine.app.${turbine.app.name}</td>
<td>The Java package of the new application.</td>
</tr>

<tr>
<td>turbine.app.om.name</td>
<td>Yes</td>
<td>${turbine.app.name}</td>
<td>Name of the Torque datasource for application data.</td>
</tr>

<tr>
<td>turbine.app.om.package</td>
<td>Yes</td>
<td>${turbine.app.package}.om</td>
<td>Package for the OM classes to be used for application data.</td>
</tr>

<tr>
<td>turbine.app.om.security.name</td>
<td>Yes</td>
<td>${turbine.app.om.name}</td>
<td>Name of the Torque datasource which
    contains the Turbine security tables (users, groups, roles, permissions)</td>
</tr>

<tr>
<td>turbine.app.om.security.package</td>
<td>Yes</td>
<td>${turbine.app.om.package}</td>
<td>Package for the OM classes to be used for security information.</td>
</tr>

<tr>
<td>turbine.app.subdir</td>
<td>Yes</td>
<td>true</td>
<td><ul>
      <li>true: Create the skeleton for the new application in a subdirectory. Name of the subdirectory is ${turbine.app.name}.</li>
      <li>false: Create the skeleton in the current directory.</li>
    </ul></td>
</tr>

  </table>
</p>
</section>

<section name="Setup Properties from other plugins">
  <p>
  <table>
    <tr>
      <th>Plugin</th>
      <th>Property</th>
      <th>Optional?</th>
      <th>Default value</th>
      <th>Description</th>
    </tr>

<tr>
<td>appserver</td>
<td>maven.appserver.name</td>
<td>Yes</td>
<td>tomcat</td>
<td>Type of the application server used for testing and/or deploying of the application</td>
</tr>

<tr>
<td>torque</td>
<td>torque.database</td>
<td>Yes</td>
<td>postgresql</td>
<td>Sets the database type that this application will use</td>
</tr>

<tr>
<td>torque</td>
<td>torque.database.driver</td>
<td>Yes</td>
<td>not set</td>
<td>Set the database driver class</td>
</tr>

<tr>
<td>torque</td>
<td>torque.database.user</td>
<td>Yes</td>
<td>not set</td>
<td>Set the database user for connecting</td>
</tr>

<tr>
<td>torque</td>
<td>torque.database.password</td>
<td>Yes</td>
<td>not set</td>
<td>Set the database password for connecting</td>
</tr>

<tr>
<td>torque</td>
<td>torque.database.buildUrl</td>
<td>Yes</td>
<td>not set</td>
<td>JDBC-URI which can be used for creating tables
    and inserting data into the database</td>
</tr>

<tr>
<td>torque</td>
<td>torque.database.createUrl</td>
<td>Yes</td>
<td>not set</td>
<td>JDBC-URI which can be used by the Torque plugin
    to connect to the database engine to create the 
    requested database.</td>
</tr>
  </table>
  </p>
</section>

<section name="Properties from the META plugin">
  <p>
  <table>
    <tr>
      <th>Property</th>
      <th>Optional?</th>
      <th>Default value</th>
      <th>Description</th>
    </tr>
<tr>
<td>turbine.app.inplace</td>
<td>Yes</td>
<td>false</td>
<td>Defines whether a web application should be
    treated as an inplace application (the source tree
    is located in the web application) or it should be
    copied into the application tree.
</td>
</tr>
<tr>
<td>turbine.app.inplace.dir</td>
<td>Yes</td>
<td>src/webapp</td>
<td>Location of the deployment directory inside an application. This
    property is only used when inplace deployment is
    selected (turbine.app.inplace is true).
</td>
</tr>
  </table>
  </p>
</section>

<section name="Properties from other plugins">
  <p>
  <table>
    <tr>
      <th>Plugin</th>
      <th>Property</th>
      <th>Optional?</th>
      <th>Default value</th>
      <th>Description</th>
    </tr>
<tr>
<td>appserver</td>
<td>maven.appserver.home</td>
<td>Yes</td>
<td>not set</td>
<td>Defines the root directory of your application server used for
    testing and/or deploying of the application if you use container
    deployment (turbine.app.inplace is true).
</td>
</tr>
  </table>
  </p>
</section>
</body>
</document>
